name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'raj-azure-resume-counter'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'backend/api'
  PYTHON_VERSION: '3.11'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Checkout GitHub Action
      uses: actions/checkout@v3

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Resolve Project Dependencies Using Pip
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        pip install flake8 bandit pytest  # Install missing dependencies
        popd

    - name: Set Python Path
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/backend/api/.python_packages/lib/site-packages" >> $GITHUB_ENV

    - name: Create .env file
      run: |
        cd backend/api/tests
        echo "${{ secrets.PYTEST_ENV_VARS }}" > .env

    - name: Run linting (fail on errors)
      run: |
        cd backend/api
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true

    - name: Security scanning (fail on issues)
      run: |
        cd backend/api
        bandit -r . -x tests
      continue-on-error: true

    - name: Run tests
      run: |
        cd backend/api/tests
        pytest test_ui.py test_security.py
      continue-on-error: false

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Run Azure Functions Action
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true

    - name: Azure logout
      run: |
        az logout
      if: always()
